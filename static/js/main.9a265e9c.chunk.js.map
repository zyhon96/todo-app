{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","filteredTodos","map","item","filter","el","TodoList","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a265e9c.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\n\n\n\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value)\n  };\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos, { text: inputText, completed: false, id: Math.random() * 1000 }\n    ])\n    setInputText(\"\");\n  }\n  const statusHandler = (e) => {\n   setStatus(e.target.value)\n  }\n  return (\n    <form>\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n\n\n\n"," import React from 'react';\n\nconst Todo = ({ text, todo,  todos, setTodos, filteredTodos }) => {\n\n    const deleteHandler = () => {\n\n        setTodos(todos.filter((el) => el.id !== todo.id))\n    };\n\n    const completeHandler = () => {\n    setTodos(todos.map((item) => {\n        if(item.id === todo.id) {\n            return {\n                ...item, \n                completed: !item.completed\n            };\n            \n        }\n        return item;\n    })\n    );\n};\n\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\": \"\"}`}>{text}</li>\n            <button  onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n\n        </div>\n    );\n}\n\nexport default Todo;","import Todo from \"./Todo\";\nimport React from 'react';\nconst TodoList = ({todos , setTodos, filteredTodos}) => {\n\n  return ( \n        <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n    \n        {filteredTodos.map((todo) =>(\n          <Todo setTodos={setTodos} todos={todos}  key={todo.id} todo={todo} text={todo.text}/>\n        ))}\n        </ul>\n      </div>\n      );\n}\n  \nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\n\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //run once\n\n  useEffect(() =>{\n    getLocalTodos();\n  }, []);\n  // usse effect\n  useEffect(() =>{\n    filterHandler();  \n    saveLocalTodos();\n    // eslint-disable-next-line\n  }, [todos, status]);\n  \n  // Functions\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  //save to local\n \n  const saveLocalTodos =() =>{\n\n  localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\nconst getLocalTodos = () => {\n  if(localStorage.getItem('todos') ===null){\n    localStorage.setItem('todos', JSON.stringify([]));\n  }\n  else{\n    let todoLocal = JSON.parse(localStorage.getItem(\"todos\"))\nsetTodos(todoLocal);\n  }\n\n   \n}\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Doyin's Todo List</h1>\n      </header>\n\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n       \n      />\n\n      <TodoList \n       filteredTodos={filteredTodos}\n       setTodos={setTodos} \n       todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}